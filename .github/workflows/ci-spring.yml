name: ci pipline for my mini project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build:
    name: build and dockerize
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v4


      - name: set up java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: build app
        run: mvn -B clean package -DskipTests

      - name: upload jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'artifact-jar'
          path: 'target/*.jar'

      - name: build and list docker image
        run: |
          docker build -t app-spring-postgres .
          docker images

#  integration-test:
#    name: test docker compose
#    runs-on: ubuntu-latest
#    needs: build
#
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: download artifact jar
#        uses: actions/download-artifact@v4
#        with:
#          name: 'artifact-jar'
#
#      - name: move jar into target folder
#        run: |
#          mkdir -p target
#          mv *.jar target/
#
#      - name: start docker compose
#        run: docker compose up -d
#
#      - name: check running containers
#        run: docker ps
#
#      - name: wait for spring boot start up
#        run: sleep 15
#
#      - name: tester l'end point
#        run:  curl http://localhost:8080/api/school/all
#
#      - name: stop services
#        run: docker compose down








  deploy:
    name: 🚀 Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Télécharger le JAR sauvegardé depuis le job build
      - name: ⬇️ Download artifact jar
        uses: actions/download-artifact@v4
        with:
          name: artifact-jar
          path: ./artifact

      # 2️⃣ Déplacer le jar dans le bon dossier
      - name: 🗂️ Move jar into target folder
        run: |
          mkdir -p target
          cp ./artifact/*.jar ./target/
          ls -R

      # 3️⃣ Connexion à Docker Hub
      - name: 🔐 Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ Build + Push Docker image
      - name: 🐳 Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .                # 👈 très important (c’est là que se trouve Dockerfile + target)
          file: ./Dockerfile        # 👈 explicitement préciser le Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app-spring-postgres:latest


